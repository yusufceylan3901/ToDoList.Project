#pragma checksum "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "23f72778df87f7d69cea6383836e420709edbe09"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_NoteList), @"mvc.1.0.view", @"/Views/Home/NoteList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\_ViewImports.cshtml"
using Eltemtek.ToDoList.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\_ViewImports.cshtml"
using Eltemtek.ToDoList.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
using DAL.Note;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"23f72778df87f7d69cea6383836e420709edbe09", @"/Views/Home/NoteList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7a7b3568fe53e853b85c99d26f6f740997824ce7", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_NoteList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<rListNote>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
   Layout = "~/Views/Shared/_Layout.cshtml"; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral(@"

<div class=""content"">
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-md-12"">
                <div class=""card"">
                    <div class=""card-header card-header-primary"">
                        <h4 class=""card-title "">Simple Table</h4>
                        <p class=""card-category""> Here is a subtitle for this table</p>
                    </div>

                    <div class=""card-body"">
                        <div class=""table-responsive"">

                            <table id=""tblNotlar"" name=""tblNotlar"" class=""table table-hover"">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>TÄ°TLE</th>
                                        <th>NOTE</th>
                                    </tr>
                                </thead>
                                <tbody>
");
#nullable restore
#line 29 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                                     foreach (var x in Model.Values)
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <tr>\r\n                                            <td>");
#nullable restore
#line 32 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                                           Write(x.Noteid);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                            <td>");
#nullable restore
#line 33 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                                           Write(x.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                            <td>");
#nullable restore
#line 34 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                                           Write(x.Note);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                            <td><a class=\"btn btn bg-danger btn1\" data-id=\"");
#nullable restore
#line 35 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                                                                                      Write(x.Noteid);

#line default
#line hidden
#nullable disable
            WriteLiteral("\">Delete</a></td>\r\n                                            <td><a class=\"btn btn bg-success btn2\" data-id=\"");
#nullable restore
#line 36 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                                                                                       Write(x.Noteid);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"");
            BeginWriteAttribute("value", " value=\"", 1637, "\"", 1652, 1);
#nullable restore
#line 36 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
WriteAttributeValue("", 1645, x.Note, 1645, 7, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">Update</a></td>\r\n                                        </tr>\r\n");
#nullable restore
#line 38 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                </tbody>
                            </table>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    $(function () {
        $(""#tblNotlar"").on(""click"", "".btn1"", function () {
            var data1 =
            {
                NoteId: $(this).data(""id""),
            };
            console.log(data1);
            var btn = $(this);
            $.ajax({
                type: ""POST"",
                url: ""/api/NoteApi/Delete/"",
                data: JSON.stringify(data1),
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function () {
                    btn.parent().parent().remove();
                    console.log(""success"");
                }
            });
        });
    });

    $(function () {
        $(""#tblNotlar"").on(""click"", "".btn2"",async function () {
        ");
            WriteLiteral("    var data1 =\r\n            {\r\n                NoteId: $(this).data(\"id\"),\r\n                Note: $(this).val(),\r\n                UserId:");
#nullable restore
#line 82 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                  Write(ViewBag.UserId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            };

            const { value: text } = await Swal.fire({
                input: 'textarea',
                inputValue: data1.Note,
                confirmButtonText: 'Update',
                showCancelButton: true,
                showConfirmButton: true
            })

            var data2 =
            {
                NoteId: $(this).data(""id""),
                Note: text,
                UserId:");
#nullable restore
#line 97 "C:\Users\hp\Desktop\GitHub\ToDoList.Project\Eltemtek.ToDoList.Web\Views\Home\NoteList.cshtml"
                  Write(ViewBag.UserId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            };

            var btn = $(this);

            $.ajax({
                type: ""POST"",
                url: ""/api/NoteApi/Update/"",
                data: JSON.stringify(data2),
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function () {
                    /*btn.parent().parent().data();*/
                    window.location.reload()
                    console.log(""success"");
                }
            });
        });




        });


</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<rListNote> Html { get; private set; }
    }
}
#pragma warning restore 1591
